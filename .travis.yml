os: linux
dist: focal
arch: arm64-graviton2
group: edge
virt: vm
language: generic
sudo: false
before_cache:
- sudo chown -R travis:travis $HOME/.m2
- rm -rf $HOME/.m2/repository/org/apache/avro/
cache:
  apt: true
  directories:
  - "${HOME}/.m2"
  - "${HOME}/.cpan"
matrix:
  include:
  - name: Java
    addons:
        sonarcloud:
            organization: "ironmatt97"
            token:
                secure: "lJplrPXNINPeLq/sHDMj8yfcTwHU2YsqcMZeL3H/NNNGfG4/gCYyDDt6WPS4L798DcxZm6ktixUPSqnHs+L4r37ARENNNxLRD0pb4OD+VrDzyhbhSVTWFW7ZxfWg9qpf308FJ3nvtI8MSxsv50BfU0mgG6i2C9RpQ+dJUuTUaJOirOuNXyQ4m9SxaJYBmOcnZCfV3yuIAulps7djdsCR3CJQK9dIFFjWuv/sd8/L89iffIE4i0zpw/AqvPjv+/MsRyZolA05fuOqDrtCv5JV3DQBw17Fb8CIbfF1m1GhfR+vr+nw0gXWzyyfnOC/VYdBsy8LbGPp0ydtTTQ/h+jebNH01Owlc9q7hXi/UCGon9VJhPp8a3mRyNj0ecEToIcC6V1oZmiw+1By7zJ9Ou1QPpyeHdL/nP/aSRDtbyWc0SqqehXhPlB+Lwlf/g8mcMnDhI8HSgSdvpbAeCyYaGT+9EkQi1c0/S9rwfWiRem7DXfu0xGDsrnnu1qczfKz15M+PxXKc/SdQqTaZ1xzE16iI+Nm1cHV655HedqDAV9D03w9EGDJDPKGh76KQAT/GBTULnpf0/XHjf+yjovEDWWYIgt9stNFihd1UwAyD18iYaN+E/HDdYAaDsPcCaMCm+oHboMhiDwtZGfW+EkoNHB3dtCojOKzx/G+mOySaiPkKiI="
        apt:
            update: true
            packages:
            - openjdk-11-jdk
            - wget
            - maven
    install:
    - export MAVEN_VERSION="3.8.3"
    - wget https://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz
    - tar zxvf apache-maven-$MAVEN_VERSION-bin.tar.gz
    - export M2_HOME=$PWD/apache-maven-$MAVEN_VERSION
    - export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-arm64"
    - export PATH="$M2_HOME/bin:$JAVA_HOME/bin:$PATH"
    before_script:
    - java -version
    - mvn -version
    script:
    - cd lang/java
    #- "./build.sh clean test"
    #the following command line builds the project, runs the tests with coverage and then execute the SonarCloud analysis
    - mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar -Dsonar.projectKey=IronMatt97_avro
  - name: C
    language: c
    addons:
      apt:
        update: true
        packages:
        - libjansson-dev
        - liblzma-dev
        - libsnappy-dev
        - cmake
    before_script:
    - PATH=$(echo "$PATH" | sed -e 's/:\/usr\/local\/cmake-3.16.8\/bin//')
    script:
    - cd lang/c
    - "./build.sh clean test"
  - name: C++
    language: cpp
    addons:
      apt:
        update: true
        packages:
        - cmake
        - libboost-all-dev
    before_script:
    - PATH=$(echo "$PATH" | sed -e 's/:\/usr\/local\/cmake-3.16.8\/bin//')
    script:
    - cd lang/c++
    - "./build.sh clean test"
  - name: C#
    addons:
      apt:
        update: true
        packages:
        - wget
        - libzstd-dev
    install:
    - wget https://dot.net/v1/dotnet-install.sh
    - bash ./dotnet-install.sh --channel "3.1" --install-dir "$HOME/.dotnet"
    - bash ./dotnet-install.sh --channel "5.0" --install-dir "$HOME/.dotnet"
    - bash ./dotnet-install.sh --channel "6.0" --install-dir "$HOME/.dotnet"
    before_script:
    - export PATH=$HOME/.dotnet:$PATH
    - dotnet --list-sdks
    script:
    - cd lang/csharp
    - "./build.sh clean test"
  - name: Python
    language: python
    python:
    - '3.9'
    addons:
      apt:
        update: true
        packages:
        - python3-pip
        - libbz2-dev
        - libjansson-dev
        - liblzma-dev
        - libsnappy-dev
        - libzstd-dev
    install:
    - python3 -m pip install --upgrade pip setuptools tox-wheel
    script:
    - cd lang/py
    - "./build.sh clean test"
  - name: Ruby
    language: ruby
    addons:
      apt:
        update: true
        packages:
        - ruby-dev
        - bundler
        - libsnappy-dev
    before_script:
    - PATH=$(echo "$PATH" | sed -e 's/:\/usr\/local\/cmake-3.16.8\/bin//')
    script:
    - cd lang/ruby
    - "./build.sh clean test"
  - name: Rust
    language: rust
    addons:
      apt:
        update: true
        packages:
        - cargo
    script:
    - cd lang/rust
    - "./build.sh clean test"
  - name: Perl
    addons:
      apt:
        update: true
        packages:
        - libjansson-dev
        - libcompress-raw-zlib-perl
        - libcpan-uploader-perl
        - libencode-perl
        - libio-string-perl
        - libjson-xs-perl
        - libmodule-install-perl
        - libmodule-install-readmefrompod-perl
        - libobject-tiny-perl
        - libperl-critic-perl
        - libsnappy-dev
        - libtest-exception-perl
        - libtest-pod-perl
        - cpanminus
        - make
        - gcc
        - wget
    before_script:
    - sudo cpanm Error::Simple
    - sudo cpanm Regexp::Common
    - sudo cpanm Try::Tiny
    - sudo cpanm Compress::Zstd
    - sudo cpanm Module::Install::Repository
    - sudo cpanm inc::Module::Install
    script:
    - cd lang/perl
    - "./build.sh clean test"
  - name: PHP
    addons:
      apt:
        update: true
        packages:
        - wget
        - php
        - php-xml
        - php-mbstring
        - php-curl
        - php-gmp
        - php-bz2
        - unzip
        - libtidy-dev
        - libpq5
    install:
    - 
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php -r "if (hash_file('sha384', 'composer-setup.php') === file_get_contents('https://composer.github.io/installer.sig'))
      { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php');
      } echo PHP_EOL;"
    - php composer-setup.php --version=2.2.5
    - php -r "unlink('composer-setup.php');"
    - sudo mv composer.phar /usr/local/bin/composer
    - PATH=$(echo "$PATH" | sed -e 's/:\/home\/travis\/.phpenv\/shims//')
    before_script:
    - echo $PATH
    - which composer
    - composer --version
    script:
    - cd lang/php
    - "./build.sh clean test"
before_install:
- lscpu
